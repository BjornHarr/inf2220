Exercise 1:
    - a is root. This is the highest possible node. (Object in java)
    - h, i, k, l and m are leaves. Leaves are nodes without children.
    - 4 is the treeÂ´s height.
    - Preorder:     (a (b (d (g (k)) (h))) (c (e (i)) (f (j (l) (m)))))
      Postorder:    K, G, H, D, B, I, E, L, M, J, F, C, A
      Inorder:      B, G, K, D, H, A, I, E, C, L, J, M, F
    - Node name : Parent | children | list siblings | compute height, depth, and size (number of nodes in subtree)
        A : does not exist | b, c | does not exits (root) | 4, 0, 12
        B : a | d | c | 3, 1, 4
        C : a | e, f | b | 3, 1, 6
        D : b | g, h | does not exist | 2, 2, 3
        E : c | i | f | 1, 2, 1
        F : c | j | e | 2, 2, 3
        G : d | k | h | 1, 3, 1
        H : d | does not exist | g | 0, 3, 0
        I : e | does not exist | does not exist | 0, 3, 0
        J : f | l, m | does not exist | 1, 3, 2
        K : g | does not exist | does not exist | 0, 4, 0
        L : j | does not exist | m | 0, 4, 0
        M : j | does not exist | l | 0, 4, 0

Exercise 2:
    - (drawn)


Exercise 4:
    - 
